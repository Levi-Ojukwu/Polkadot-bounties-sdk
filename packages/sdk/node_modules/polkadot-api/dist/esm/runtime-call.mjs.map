{"version":3,"file":"runtime-call.mjs","sources":["../../src/runtime-call.ts"],"sourcesContent":["import { firstValueFromWithSignal, isOptionalArg } from \"@/utils\"\nimport { ChainHead$ } from \"@polkadot-api/observable-client\"\nimport { toHex } from \"@polkadot-api/utils\"\nimport { map, mergeMap } from \"rxjs\"\nimport { CompatibilityFunctions, CompatibilityHelper } from \"./compatibility\"\nimport { PullOptions } from \"./types\"\n\ntype WithCallOptions<Args extends Array<any>> = Args[\"length\"] extends 0\n  ? [options?: PullOptions]\n  : [...args: Args, options?: PullOptions]\n\nexport type RuntimeCall<Unsafe, D, Args extends Array<any>, Payload> = {\n  /**\n   * Get `Payload` (Promise-based) for the runtime call.\n   *\n   * @param args  All keys needed for that runtime call.\n   *              At the end, optionally set which block to target (latest\n   *              known finalized is the default) and an AbortSignal.\n   */\n  (...args: WithCallOptions<Args>): Promise<Payload>\n} & (Unsafe extends true ? {} : CompatibilityFunctions<D>)\n\nexport const createRuntimeCallEntry = (\n  api: string,\n  method: string,\n  chainHead: ChainHead$,\n  {\n    isCompatible,\n    getCompatibilityLevel,\n    compatibleRuntime$,\n    argsAreCompatible,\n    valuesAreCompatible,\n  }: CompatibilityHelper,\n): RuntimeCall<any, any, any, any> => {\n  const callName = `${api}_${method}`\n  const compatibilityError = () =>\n    new Error(`Incompatible runtime entry RuntimeCall(${callName})`)\n\n  const fn = (...args: Array<any>) => {\n    const lastArg = args[args.length - 1]\n    const isLastArgOptional = isOptionalArg(lastArg)\n    const { signal, at: _at }: PullOptions = isLastArgOptional ? lastArg : {}\n    const at = _at ?? null\n\n    const result$ = compatibleRuntime$(chainHead, at).pipe(\n      mergeMap(([runtime, ctx]) => {\n        let codecs\n        try {\n          codecs = ctx.dynamicBuilder.buildRuntimeCall(api, method)\n        } catch {\n          throw new Error(`Runtime entry RuntimeCall(${callName}) not found`)\n        }\n        if (!argsAreCompatible(runtime, ctx, args)) throw compatibilityError()\n        return chainHead.call$(at, callName, toHex(codecs.args.enc(args))).pipe(\n          map(codecs.value.dec),\n          map((value) => {\n            if (!valuesAreCompatible(runtime, ctx, value))\n              throw compatibilityError()\n            return value\n          }),\n        )\n      }),\n      chainHead.withHodl(at),\n    )\n\n    return firstValueFromWithSignal(result$, signal)\n  }\n\n  return Object.assign(fn, { getCompatibilityLevel, isCompatible })\n}\n"],"names":[],"mappings":";;;;;;;;AAsBO,MAAM,sBAAA,GAAyB,CACpC,GAAA,EACA,MAAA,EACA,SAAA,EACA;AAAA,EACE,YAAA;AAAA,EACA,qBAAA;AAAA,EACA,kBAAA;AAAA,EACA,iBAAA;AAAA,EACA;AACF,CAAA,KACoC;AACpC,EAAA,MAAM,QAAA,GAAW,CAAA,EAAG,GAAG,CAAA,CAAA,EAAI,MAAM,CAAA,CAAA;AACjC,EAAA,MAAM,qBAAqB,MACzB,IAAI,KAAA,CAAM,CAAA,uCAAA,EAA0C,QAAQ,CAAA,CAAA,CAAG,CAAA;AAEjE,EAAA,MAAM,EAAA,GAAK,IAAI,IAAA,KAAqB;AAClC,IAAA,MAAM,OAAA,GAAU,IAAA,CAAK,IAAA,CAAK,MAAA,GAAS,CAAC,CAAA;AACpC,IAAA,MAAM,iBAAA,GAAoB,cAAc,OAAO,CAAA;AAC/C,IAAA,MAAM,EAAE,MAAA,EAAQ,EAAA,EAAI,KAAI,GAAiB,iBAAA,GAAoB,UAAU,EAAC;AACxE,IAAA,MAAM,KAAK,GAAA,IAAO,IAAA;AAElB,IAAA,MAAM,OAAA,GAAU,kBAAA,CAAmB,SAAA,EAAW,EAAE,CAAA,CAAE,IAAA;AAAA,MAChD,QAAA,CAAS,CAAC,CAAC,OAAA,EAAS,GAAG,CAAA,KAAM;AAC3B,QAAA,IAAI,MAAA;AACJ,QAAA,IAAI;AACF,UAAA,MAAA,GAAS,GAAA,CAAI,cAAA,CAAe,gBAAA,CAAiB,GAAA,EAAK,MAAM,CAAA;AAAA,QAC1D,CAAA,CAAA,MAAQ;AACN,UAAA,MAAM,IAAI,KAAA,CAAM,CAAA,0BAAA,EAA6B,QAAQ,CAAA,WAAA,CAAa,CAAA;AAAA,QACpE;AACA,QAAA,IAAI,CAAC,iBAAA,CAAkB,OAAA,EAAS,KAAK,IAAI,CAAA,QAAS,kBAAA,EAAmB;AACrE,QAAA,OAAO,SAAA,CAAU,KAAA,CAAM,EAAA,EAAI,QAAA,EAAU,KAAA,CAAM,MAAA,CAAO,IAAA,CAAK,GAAA,CAAI,IAAI,CAAC,CAAC,CAAA,CAAE,IAAA;AAAA,UACjE,GAAA,CAAI,MAAA,CAAO,KAAA,CAAM,GAAG,CAAA;AAAA,UACpB,GAAA,CAAI,CAAC,KAAA,KAAU;AACb,YAAA,IAAI,CAAC,mBAAA,CAAoB,OAAA,EAAS,GAAA,EAAK,KAAK,CAAA;AAC1C,cAAA,MAAM,kBAAA,EAAmB;AAC3B,YAAA,OAAO,KAAA;AAAA,UACT,CAAC;AAAA,SACH;AAAA,MACF,CAAC,CAAA;AAAA,MACD,SAAA,CAAU,SAAS,EAAE;AAAA,KACvB;AAEA,IAAA,OAAO,wBAAA,CAAyB,SAAS,MAAM,CAAA;AAAA,EACjD,CAAA;AAEA,EAAA,OAAO,OAAO,MAAA,CAAO,EAAA,EAAI,EAAE,qBAAA,EAAuB,cAAc,CAAA;AAClE;;;;"}