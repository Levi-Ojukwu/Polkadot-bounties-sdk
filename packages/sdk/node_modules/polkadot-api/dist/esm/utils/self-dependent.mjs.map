{"version":3,"file":"self-dependent.mjs","sources":["../../../src/utils/self-dependent.ts"],"sourcesContent":["import {\n  Observable,\n  Subject,\n  MonoTypeOperatorFunction,\n  BehaviorSubject,\n} from \"rxjs\"\nimport { switchAll, tap } from \"rxjs/operators\"\n\n/**\n * A creation operator that helps at creating observables that have circular\n * dependencies.\n *\n * @returns\n */\nexport const selfDependent = <T>(): [\n  Observable<T>,\n  () => MonoTypeOperatorFunction<T>,\n] => {\n  const activeSubject: BehaviorSubject<Subject<T>> = new BehaviorSubject(\n    new Subject<T>(),\n  )\n  return [\n    activeSubject.pipe(switchAll()),\n    () =>\n      tap({\n        next: (v) => activeSubject.value.next(v),\n        error: (e) => {\n          activeSubject.value.error(e)\n          activeSubject.next(new Subject<T>())\n        },\n        complete: () => {\n          activeSubject.value.complete()\n          activeSubject.next(new Subject<T>())\n        },\n      }) as MonoTypeOperatorFunction<T>,\n  ]\n}\n"],"names":[],"mappings":";;;AAcO,MAAM,gBAAgB,MAGxB;AACH,EAAA,MAAM,gBAA6C,IAAI,eAAA;AAAA,IACrD,IAAI,OAAA;AAAW,GACjB;AACA,EAAA,OAAO;AAAA,IACL,aAAA,CAAc,IAAA,CAAK,SAAA,EAAW,CAAA;AAAA,IAC9B,MACE,GAAA,CAAI;AAAA,MACF,MAAM,CAAC,CAAA,KAAM,aAAA,CAAc,KAAA,CAAM,KAAK,CAAC,CAAA;AAAA,MACvC,KAAA,EAAO,CAAC,CAAA,KAAM;AACZ,QAAA,aAAA,CAAc,KAAA,CAAM,MAAM,CAAC,CAAA;AAC3B,QAAA,aAAA,CAAc,IAAA,CAAK,IAAI,OAAA,EAAY,CAAA;AAAA,MACrC,CAAA;AAAA,MACA,UAAU,MAAM;AACd,QAAA,aAAA,CAAc,MAAM,QAAA,EAAS;AAC7B,QAAA,aAAA,CAAc,IAAA,CAAK,IAAI,OAAA,EAAY,CAAA;AAAA,MACrC;AAAA,KACD;AAAA,GACL;AACF;;;;"}