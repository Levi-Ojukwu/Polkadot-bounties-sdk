{"version":3,"file":"archive.mjs","sources":["../../../src/downstream/archive.ts"],"sourcesContent":["import { createUpstream } from \"@/upstream/upstream\"\nimport { createOpaqueToken } from \"@/utils/create-opaque-token\"\nimport { finalize, map, Observable, take } from \"rxjs\"\nimport { areItemsValid, getStg$ } from \"./storage\"\n\nexport const archiveMethods = Object.fromEntries(\n  [\n    \"body\",\n    \"call\",\n    \"finalizedHeight\",\n    \"genesisHash\",\n    \"hashByHeight\",\n    \"header\",\n    \"stopStorage\",\n    \"storage\",\n  ].map((key) => [key, `archive_v1_${key}`] as const),\n)\n\nexport const createArchive = (\n  upstream: ReturnType<typeof createUpstream>,\n  reply: (id: string, result: any) => void,\n  err: (id: string, code: number, msg: string) => void,\n  notification: (method: string, subscription: string, result: any) => void,\n) => {\n  const subscriptions = new Map<string, () => void>()\n  const stg = (\n    reply: (x: string) => void,\n    at: string,\n    items: Array<{\n      key: string\n      type:\n        | \"value\"\n        | \"hash\"\n        | \"descendantsValues\"\n        | \"descendantsHashes\"\n        | \"closestDescendantMerkleValue\"\n    }>,\n  ) => {\n    const subId = createOpaqueToken()\n    reply(subId)\n    const innerNotifiaction = (result: any) => {\n      notification(\"archive_v1_storageEvent\", subId, result)\n    }\n\n    const subscription = getStg$(upstream, at, items)\n      .pipe(\n        finalize(() => {\n          subscriptions.delete(subId)\n        }),\n      )\n      .subscribe(\n        (items) => {\n          items.forEach((item) =>\n            innerNotifiaction({ event: \"storage\", ...item }),\n          )\n        },\n        (e) => {\n          console.error(e)\n          innerNotifiaction({ event: \"storageError\", error: \"\" }) // TODO: figure this out\n        },\n        () => {\n          innerNotifiaction({ event: \"storageDone\" })\n        },\n      )\n\n    if (!subscription.closed)\n      subscriptions.set(subId, () => {\n        subscription.unsubscribe()\n      })\n  }\n\n  return (rId: string, name: string, params: Array<any>) => {\n    const innerReply = (value: any) => {\n      reply(rId, value)\n    }\n\n    const obsReply = (input: Observable<any>) => {\n      input.subscribe({\n        next: innerReply,\n        error: (e) => {\n          err(rId, e.code ?? -1, e.error ?? \"\")\n        },\n      })\n    }\n\n    const [firstArg, secondArg, thirdArg] = params\n    switch (name) {\n      case archiveMethods.body:\n        return obsReply(upstream.getBody(firstArg))\n      case archiveMethods.call:\n        return obsReply(\n          upstream\n            .runtimeCall(firstArg, secondArg, thirdArg)\n            .pipe(map((value) => ({ success: true, value }))),\n        )\n      case archiveMethods.finalizedHeight:\n        return obsReply(\n          upstream.finalized$.pipe(\n            map((x) => x.number),\n            take(1),\n          ),\n        )\n      case archiveMethods.genesisHash:\n        return obsReply(upstream.genesisHash)\n      case archiveMethods.hashByHeight:\n        return obsReply(upstream.getBlockHash$(firstArg))\n      case archiveMethods.header:\n        return obsReply(\n          upstream.getHeader$(firstArg).pipe(map((h) => h.header)),\n        )\n      case archiveMethods.stopStorage: {\n        const sub = subscriptions.get(firstArg)\n        return sub ? sub() : err(rId, -32602, \"Invalid args\")\n      }\n      case archiveMethods.storage:\n        return areItemsValid(secondArg)\n          ? stg(innerReply, firstArg, secondArg)\n          : err(rId, -32602, \"Invalid args\")\n    }\n    throw null\n  }\n}\n"],"names":["reply","items"],"mappings":"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"}