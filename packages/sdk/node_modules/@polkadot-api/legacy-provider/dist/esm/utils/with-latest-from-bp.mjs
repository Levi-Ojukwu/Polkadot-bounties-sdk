import { Observable } from 'rxjs';

const withLatestFromBp = (latest$) => (base$) => new Observable((observer) => {
  let latest;
  let prev = [];
  const subscription = base$.subscribe({
    next(v) {
      if (prev) prev.push(v);
      else observer.next([latest, v]);
    },
    error(e) {
      observer.error(e);
    },
    complete() {
      observer.complete();
    }
  });
  subscription.add(
    latest$.subscribe({
      next(v) {
        latest = v;
        if (prev) {
          const copy = [...prev];
          prev = null;
          copy.forEach((p) => observer.next([latest, p]));
        }
      },
      error(e) {
        observer.error(e);
      },
      complete() {
        if (prev) observer.error(new Error("Empty complete"));
      }
    })
  );
  return subscription;
});

export { withLatestFromBp };
//# sourceMappingURL=with-latest-from-bp.mjs.map
