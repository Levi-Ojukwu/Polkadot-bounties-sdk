const withNumericIds = (base) => (onMsg) => {
  let nextId = 0;
  const numberToOriginal = /* @__PURE__ */ new Map();
  const { send: originalSend, disconnect } = base((msg) => {
    const { id, ...rest } = JSON.parse(msg);
    let actualMsg = msg;
    if (numberToOriginal.has(id)) {
      actualMsg = JSON.stringify({ ...rest, id: numberToOriginal.get(id) });
      numberToOriginal.delete(id);
    }
    onMsg(actualMsg);
  });
  return {
    send: (msg) => {
      const parsedMsg = JSON.parse(msg);
      let actualMsg = msg;
      if ("id" in parsedMsg) {
        const id = nextId++;
        numberToOriginal.set(id, parsedMsg.id);
        actualMsg = JSON.stringify({ ...parsedMsg, id });
      }
      originalSend(actualMsg);
    },
    disconnect
  };
};

export { withNumericIds };
//# sourceMappingURL=with-numeric.mjs.map
