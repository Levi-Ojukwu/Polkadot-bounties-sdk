{"version":3,"file":"unpin-hash.mjs","sources":["../../../src/parsed-enhancers/unpin-hash.ts"],"sourcesContent":["import { chainHead } from \"@/methods\"\nimport type { ParsedJsonRpcEnhancer } from \"@/parsed\"\n\nexport const unpinHash: ParsedJsonRpcEnhancer = (base) => (onMsg) => {\n  const { send: _send, disconnect } = base(onMsg)\n\n  const send = (msg: { id?: string; method?: string; params?: Array<any> }) => {\n    const { method, params, id, ...rest } = msg\n    if (method == chainHead.unpin && params && Array.isArray(params[1])) {\n      params[1].forEach((hash, idx) => {\n        _send({\n          ...rest,\n          id: idx === 0 ? id : `${id}-patched-${idx}`,\n          method,\n          params: [params[0], hash],\n        })\n      })\n    } else _send(msg)\n  }\n\n  return { send, disconnect }\n}\n"],"names":[],"mappings":";;AAGO,MAAM,SAAA,GAAmC,CAAC,IAAA,KAAS,CAAC,KAAA,KAAU;AACnE,EAAA,MAAM,EAAE,IAAA,EAAM,KAAA,EAAO,UAAA,EAAW,GAAI,KAAK,KAAK,CAAA;AAE9C,EAAA,MAAM,IAAA,GAAO,CAAC,GAAA,KAA+D;AAC3E,IAAA,MAAM,EAAE,MAAA,EAAQ,MAAA,EAAQ,EAAA,EAAI,GAAG,MAAK,GAAI,GAAA;AACxC,IAAA,IAAI,MAAA,IAAU,UAAU,KAAA,IAAS,MAAA,IAAU,MAAM,OAAA,CAAQ,MAAA,CAAO,CAAC,CAAC,CAAA,EAAG;AACnE,MAAA,MAAA,CAAO,CAAC,CAAA,CAAE,OAAA,CAAQ,CAAC,MAAM,GAAA,KAAQ;AAC/B,QAAA,KAAA,CAAM;AAAA,UACJ,GAAG,IAAA;AAAA,UACH,IAAI,GAAA,KAAQ,CAAA,GAAI,KAAK,CAAA,EAAG,EAAE,YAAY,GAAG,CAAA,CAAA;AAAA,UACzC,MAAA;AAAA,UACA,MAAA,EAAQ,CAAC,MAAA,CAAO,CAAC,GAAG,IAAI;AAAA,SACzB,CAAA;AAAA,MACH,CAAC,CAAA;AAAA,IACH,CAAA,YAAa,GAAG,CAAA;AAAA,EAClB,CAAA;AAEA,EAAA,OAAO,EAAE,MAAM,UAAA,EAAW;AAC5B;;;;"}