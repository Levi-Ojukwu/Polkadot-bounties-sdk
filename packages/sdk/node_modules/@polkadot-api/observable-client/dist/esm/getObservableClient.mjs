import { noop, of } from 'rxjs';
import { getChainHead$ } from './chainHead/chainHead.mjs';
import getBroadcastTx$ from './tx.mjs';
import { getArchive } from './archive/archive.mjs';

const ofNullFn = () => of(null);
const getObservableClient = (substrateClient, {
  getMetadata,
  setMetadata
} = {}) => ({
  chainHead$: () => getChainHead$(
    substrateClient.chainHead,
    getMetadata || ofNullFn,
    setMetadata || noop
  ),
  archive: getArchive(substrateClient.archive),
  broadcastTx$: getBroadcastTx$(substrateClient.transaction),
  destroy: substrateClient.destroy
});

export { getObservableClient };
//# sourceMappingURL=getObservableClient.mjs.map
