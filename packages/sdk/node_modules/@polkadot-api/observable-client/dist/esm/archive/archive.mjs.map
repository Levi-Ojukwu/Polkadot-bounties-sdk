{"version":3,"file":"archive.mjs","sources":["../../../src/archive/archive.ts"],"sourcesContent":["import { RuntimeContext } from \"@/chainHead\"\nimport { fromAbortControllerFn } from \"@/chainHead/enhancers\"\nimport { createRuntimeCtx, getRawMetadata$ } from \"@/utils\"\nimport {\n  HexString,\n  unifyMetadata,\n  metadata as metadataCodec,\n  blockHeader,\n} from \"@polkadot-api/substrate-bindings\"\nimport {\n  Archive,\n  StorageItemInput,\n  StorageItemResponse,\n  StorageResult,\n} from \"@polkadot-api/substrate-client\"\nimport { catchError, map, mergeMap, Observable, of, tap } from \"rxjs\"\n\nexport const getArchive =\n  ({ storageSubscription, ...archive }: Archive) =>\n  (getRuntime: (codeHash: string) => Observable<RuntimeContext | null>) => {\n    const runtimes: Record<string, RuntimeContext> = {}\n    const rawStorage$ = fromAbortControllerFn(archive.storage)\n    const call$ = fromAbortControllerFn(archive.call)\n    const rawHeader$ = fromAbortControllerFn(archive.header)\n    const body$ = fromAbortControllerFn(archive.body)\n\n    const header$ = (blockHash: string) =>\n      rawHeader$(blockHash).pipe(map(blockHeader[1]))\n\n    const getCodeHash = (blockHash: string): Observable<HexString> =>\n      // \":code\" => \"0x3a636f6465\"\n      rawStorage$(blockHash, \"hash\", \"0x3a636f6465\", null).pipe(map((x) => x!))\n\n    const getRuntime$ = (codeHash: string, blockHash: string) =>\n      getRuntime(codeHash).pipe(\n        catchError(() => of(null)),\n        mergeMap((result) =>\n          result\n            ? of(result)\n            : getRawMetadata$((...args) => call$(blockHash, ...args)).pipe(\n                map((rawMetadata) =>\n                  createRuntimeCtx(\n                    unifyMetadata(metadataCodec.dec(rawMetadata)),\n                    rawMetadata,\n                    codeHash,\n                  ),\n                ),\n              ),\n        ),\n        tap((runtime) => {\n          runtimes[codeHash] = runtime\n        }),\n      )\n\n    const getRuntimeContext$ = (blockHash: string) =>\n      getCodeHash(blockHash).pipe(\n        mergeMap((codeHash) => {\n          const runtime = runtimes[codeHash]\n          return runtime ? of(runtime) : getRuntime$(codeHash, blockHash)\n        }),\n      )\n\n    const storage$ = <\n      Type extends StorageItemInput[\"type\"],\n      M extends\n        | undefined\n        | ((data: StorageResult<Type>, ctx: RuntimeContext) => any),\n    >(\n      hash: string,\n      type: Type,\n      keyMapper: (ctx: RuntimeContext) => string,\n      childTrie: string | null = null,\n      mapper?: M,\n    ): Observable<\n      undefined extends M ? StorageResult<Type> : ReturnType<NonNullable<M>>\n    > =>\n      getRuntimeContext$(hash).pipe(\n        mergeMap((ctx) =>\n          rawStorage$(hash, type, keyMapper(ctx), childTrie).pipe(\n            map((x) => (mapper ? mapper(x, ctx) : x)),\n          ),\n        ),\n      )\n\n    const storageQueries$ = (\n      hash: string,\n      queries: Array<StorageItemInput>,\n      childTrie?: string,\n    ): Observable<StorageItemResponse> =>\n      new Observable((observer) =>\n        storageSubscription(\n          hash,\n          queries,\n          childTrie || null,\n          (item) => observer.next(item),\n          (error) => observer.error(error),\n          () => {\n            observer.complete()\n          },\n        ),\n      )\n\n    const eventsAt$ = (hash: string) =>\n      storage$(\n        hash,\n        \"value\",\n        (ctx) => ctx.events.key,\n        null,\n        (x, ctx) => ctx.events.dec(x!),\n      )\n\n    return {\n      body$,\n      header$,\n      storage$,\n      storageQueries$,\n      call$,\n      eventsAt$,\n      getRuntimeContext$,\n    }\n  }\n\nexport type Archive$ = ReturnType<ReturnType<typeof getArchive>>\n"],"names":["metadataCodec"],"mappings":"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"}