{"version":3,"file":"optionalHash.mjs","sources":["../../../../src/chainHead/enhancers/optionalHash.ts"],"sourcesContent":["import {\n  MonoTypeOperatorFunction,\n  Observable,\n  catchError,\n  mergeMap,\n  take,\n  throwError,\n} from \"rxjs\"\nimport { BlockNotPinnedError } from \"../errors\"\nimport { withOperationInaccessibleRetry } from \"./operation-inaccessible-retry\"\n\nconst dynamicBlocks = new Set([\"best\", \"finalized\", null])\n\nexport const getWithOptionalHash$ = (\n  finalized$: Observable<string>,\n  best$: Observable<string>,\n  usingBlock: <T>(blockHash: string) => MonoTypeOperatorFunction<T>,\n) => {\n  return <Args extends Array<any>, T>(\n      fn: (hash: string, ...args: Args) => Observable<T>,\n    ) =>\n    (hash: string | null, ...args: Args) => {\n      if (!dynamicBlocks.has(hash))\n        return withOperationInaccessibleRetry(fn(hash as string, ...args)).pipe(\n          usingBlock(hash as string),\n        )\n\n      const hash$ = hash === \"best\" ? best$ : finalized$\n      const result$: Observable<T> = hash$.pipe(\n        take(1),\n        mergeMap((h) => fn(h, ...args).pipe(usingBlock(h))),\n        catchError((e) => {\n          return e instanceof BlockNotPinnedError\n            ? result$\n            : throwError(() => e)\n        }),\n      )\n      return withOperationInaccessibleRetry(result$)\n    }\n}\n"],"names":[],"mappings":";;;;AAWA,MAAM,gCAAgB,IAAI,GAAA,CAAI,CAAC,MAAA,EAAQ,WAAA,EAAa,IAAI,CAAC,CAAA;AAElD,MAAM,oBAAA,GAAuB,CAClC,UAAA,EACA,KAAA,EACA,UAAA,KACG;AACH,EAAA,OAAO,CACH,EAAA,KAEF,CAAC,IAAA,EAAA,GAAwB,IAAA,KAAe;AACtC,IAAA,IAAI,CAAC,aAAA,CAAc,GAAA,CAAI,IAAI,CAAA;AACzB,MAAA,OAAO,+BAA+B,EAAA,CAAG,IAAA,EAAgB,GAAG,IAAI,CAAC,CAAA,CAAE,IAAA;AAAA,QACjE,WAAW,IAAc;AAAA,OAC3B;AAEF,IAAA,MAAM,KAAA,GAAQ,IAAA,KAAS,MAAA,GAAS,KAAA,GAAQ,UAAA;AACxC,IAAA,MAAM,UAAyB,KAAA,CAAM,IAAA;AAAA,MACnC,KAAK,CAAC,CAAA;AAAA,MACN,QAAA,CAAS,CAAC,CAAA,KAAM,EAAA,CAAG,CAAA,EAAG,GAAG,IAAI,CAAA,CAAE,IAAA,CAAK,UAAA,CAAW,CAAC,CAAC,CAAC,CAAA;AAAA,MAClD,UAAA,CAAW,CAAC,CAAA,KAAM;AAChB,QAAA,OAAO,CAAA,YAAa,mBAAA,GAChB,OAAA,GACA,UAAA,CAAW,MAAM,CAAC,CAAA;AAAA,MACxB,CAAC;AAAA,KACH;AACA,IAAA,OAAO,+BAA+B,OAAO,CAAA;AAAA,EAC/C,CAAA;AACJ;;;;"}