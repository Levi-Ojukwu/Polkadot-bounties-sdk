{"version":3,"file":"get-new-types.mjs","sources":["../../src/get-new-types.ts"],"sourcesContent":["import {\n  getChecksumBuilder,\n  MetadataLookup,\n} from \"@polkadot-api/metadata-builders\"\nimport type { V14Lookup } from \"@polkadot-api/substrate-bindings\"\nimport { KnownTypes } from \"./known-types\"\nimport { defaultDeclarations, getTypesBuilder } from \"./types-builder\"\n\nexport const getNewTypes = (\n  lookup: MetadataLookup,\n  knownTypes: KnownTypes,\n  getTypeName: (data: V14Lookup[number]) => string | null,\n) => {\n  const { metadata } = lookup\n  const checksumBuilder = getChecksumBuilder(lookup)\n  let declarations = defaultDeclarations()\n  let typesBuilder = getTypesBuilder(\n    declarations,\n    lookup,\n    knownTypes,\n    checksumBuilder,\n  )\n\n  let ignoredIds = new Set<number>(\n    \"outerEnums\" in metadata\n      ? [\n          metadata.outerEnums.call,\n          metadata.outerEnums.error,\n          metadata.outerEnums.event,\n        ]\n      : [],\n  )\n\n  ;(\"outerEnums\" in metadata\n    ? [metadata.outerEnums.call, metadata.outerEnums.event]\n    : []\n  )\n    .map(lookup)\n    .forEach((entry) => {\n      if (entry.type !== \"enum\") throw null\n      Object.values(entry.value).forEach((inner) => {\n        if (inner.type === \"void\") return\n        ignoredIds.add(Object.values(inner.value)[0].id)\n      })\n    })\n\n  const wannabes: KnownTypes = {}\n  const nameToChecksum = new Map<string, { path: string[]; checksum: string }>()\n\n  metadata.lookup.forEach((x) => {\n    const result = checksumBuilder.buildDefinition(x.id)!\n    typesBuilder.buildDefinition(x.id)\n    const variable = declarations.variables.get(result)\n\n    if (\n      !variable ||\n      !variable.type.startsWith(\"AnonymousEnum<\") ||\n      variable.checksum in wannabes\n    )\n      return\n\n    const typeName = getTypeName(x)\n    if (!typeName) return\n\n    let finalTypeName = typeName\n    for (let i = 1; nameToChecksum.has(finalTypeName); i++)\n      finalTypeName = typeName + i\n\n    wannabes[variable.checksum] = { name: finalTypeName, priority: 0 }\n    nameToChecksum.set(finalTypeName, {\n      checksum: variable.checksum,\n      path: x.path,\n    })\n  })\n\n  declarations = defaultDeclarations()\n  typesBuilder = getTypesBuilder(\n    declarations,\n    lookup,\n    wannabes,\n    checksumBuilder,\n  )\n\n  metadata.lookup.forEach(({ id }) => {\n    typesBuilder.buildDefinition(id)\n  })\n\n  return Object.fromEntries(\n    [...nameToChecksum].map(([name, { checksum, path }]) => {\n      return [\n        checksum,\n        {\n          name,\n          checksum,\n          type: declarations.variables.get(checksum)!.type,\n          path,\n        },\n      ]\n    }),\n  )\n}\n"],"names":[],"mappings":"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"}