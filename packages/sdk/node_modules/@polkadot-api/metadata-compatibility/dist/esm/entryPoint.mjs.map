{"version":3,"file":"entryPoint.mjs","sources":["../../src/entryPoint.ts"],"sourcesContent":["import type { EnumVar } from \"@polkadot-api/metadata-builders\"\nimport {\n  compactNumber,\n  UnifiedMetadata,\n  Struct,\n  Variant,\n} from \"@polkadot-api/substrate-bindings\"\nimport { isCompatible } from \"./isCompatible\"\nimport {\n  Change,\n  CompatibilityCache,\n  CompatibilityLevel,\n  isStaticCompatible,\n} from \"./isStaticCompatible\"\nimport {\n  mapLookupToTypedef,\n  mapReferences,\n  Primitive,\n  TypedefCodec,\n  type TypedefNode,\n} from \"./typedef\"\n\nexport type EntryPointNode =\n  | {\n      type: \"lookup\"\n      value: number\n    }\n  | {\n      type: \"typedef\"\n      value: TypedefNode\n    }\nconst EntryPointNodeCodec = Variant({\n  lookup: compactNumber,\n  typedef: TypedefCodec,\n})\n\nconst lookupNode = (value: number): EntryPointNode => ({\n  type: \"lookup\",\n  value,\n})\nconst typedefNode = (value: TypedefNode): EntryPointNode => ({\n  type: \"typedef\",\n  value,\n})\nexport const voidEntryPointNode = typedefNode({\n  type: \"terminal\",\n  value: { type: Primitive.void },\n})\n\nexport interface EntryPoint {\n  args: EntryPointNode\n  values: EntryPointNode\n}\nexport const EntryPointCodec = Struct({\n  args: EntryPointNodeCodec,\n  values: EntryPointNodeCodec,\n})\n\nexport function storageEntryPoint(\n  storageEntry: Exclude<\n    UnifiedMetadata[\"pallets\"][number][\"storage\"],\n    undefined\n  >[\"items\"][number],\n): EntryPoint {\n  if (storageEntry.type.tag === \"plain\")\n    return {\n      args: voidEntryPointNode,\n      values: lookupNode(storageEntry.type.value),\n    }\n\n  const { key, value } = storageEntry.type.value\n  return {\n    args: lookupNode(key),\n    values: lookupNode(value),\n  }\n}\n\nexport function runtimeCallEntryPoint(\n  entry: UnifiedMetadata[\"apis\"][number][\"methods\"][number],\n): EntryPoint {\n  return {\n    args: typedefNode({\n      type: \"tuple\",\n      value: entry.inputs.map((v) => v.type),\n    }),\n    values: lookupNode(entry.output),\n  }\n}\n\nexport function enumValueEntryPointNode(\n  entry: EnumVar[\"value\"][keyof EnumVar[\"value\"]],\n): EntryPointNode {\n  return entry.type === \"lookupEntry\"\n    ? lookupNode(entry.value.id)\n    : typedefNode(mapLookupToTypedef(entry))\n}\n\nexport function singleValueEntryPoint(value: number): EntryPoint {\n  return {\n    args: voidEntryPointNode,\n    values: lookupNode(value),\n  }\n}\n\nexport interface CompatibilityResult {\n  level: CompatibilityLevel\n  changes: Array<Change>\n}\n\nexport function entryPointsAreCompatible(\n  descriptorEntry: EntryPoint,\n  getDescriptorNode: (id: number) => TypedefNode,\n  runtimeEntry: EntryPoint,\n  getRuntimeNode: (id: number) => TypedefNode,\n  cache: CompatibilityCache,\n  deep?: boolean,\n): {\n  args: CompatibilityResult\n  values: CompatibilityResult\n} {\n  const resolveNode = (\n    node: EntryPointNode,\n    getTypedef: (id: number) => TypedefNode,\n  ): TypedefNode =>\n    node.type === \"lookup\" ? getTypedef(node.value) : node.value\n\n  // EntryPoint interaction \"origin -> dest\" is descriptor -> runtime for args, and runtime -> descriptor for values.\n  return {\n    args: isStaticCompatible(\n      resolveNode(descriptorEntry.args, getDescriptorNode),\n      getDescriptorNode,\n      resolveNode(runtimeEntry.args, getRuntimeNode),\n      getRuntimeNode,\n      cache,\n      deep,\n    ),\n    values: isStaticCompatible(\n      resolveNode(runtimeEntry.values, getRuntimeNode),\n      getRuntimeNode,\n      resolveNode(descriptorEntry.values, getDescriptorNode),\n      getDescriptorNode,\n      cache,\n      deep,\n    ),\n  }\n}\n\nexport function valueIsCompatibleWithDest(\n  dest: EntryPointNode,\n  getDestNode: (id: number) => TypedefNode,\n  value: unknown,\n) {\n  const node = dest.type === \"lookup\" ? getDestNode(dest.value) : dest.value\n  return isCompatible(value, node, getDestNode)\n}\n\nexport function mapEntryPointReferences(\n  entryPoint: EntryPoint,\n  mapFn: (id: number) => number,\n): EntryPoint {\n  const mapNode = (node: EntryPointNode) =>\n    node.type === \"lookup\"\n      ? lookupNode(mapFn(node.value))\n      : typedefNode(mapReferences(node.value, mapFn))\n\n  return {\n    args: mapNode(entryPoint.args),\n    values: mapNode(entryPoint.values),\n  }\n}\n"],"names":[],"mappings":"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"}