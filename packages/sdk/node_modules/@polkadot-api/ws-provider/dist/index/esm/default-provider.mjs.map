{"version":3,"file":"default-provider.mjs","sources":["../../../src/default-provider.ts"],"sourcesContent":["import { getSyncProvider } from \"@polkadot-api/json-rpc-provider-proxy\"\nimport { StatusChange, WsJsonRpcProvider, WsEvent } from \"./types-common\"\nimport { followEnhancer } from \"./follow-enhancer\"\nimport { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { WebSocketClass } from \"./types-new\"\n\nconst timeoutError: StatusChange = {\n  type: WsEvent.ERROR,\n  event: { type: \"timeout\" },\n}\n\nexport const noop = () => {}\n\nexport const defaultConfig: {\n  onStatusChanged: (status: StatusChange) => void\n  innerEnhancer: (input: JsonRpcProvider) => JsonRpcProvider\n  timeout: number\n} = {\n  onStatusChanged: noop,\n  innerEnhancer: (x: JsonRpcProvider) => x,\n  timeout: 5_000,\n}\n\nexport const mapEndpoints = (\n  endpoints: Array<string | { uri: string; protocol: string | string[] }>,\n): Array<[string, string | string[]] | [string]> =>\n  endpoints.map((x) => (typeof x === \"string\" ? [x] : [x.uri, x.protocol]))\n\nexport const getWsProvider = (\n  endpoints:\n    | string\n    | Array<string | { uri: string; protocol: string | string[] }>,\n  config?: Partial<{\n    onStatusChanged: (status: StatusChange) => void\n    innerEnhancer: (input: JsonRpcProvider) => JsonRpcProvider\n    timeout: number\n    websocketClass: WebSocketClass\n  }>,\n): WsJsonRpcProvider => {\n  const { onStatusChanged, innerEnhancer, timeout } = {\n    ...defaultConfig,\n    ...config,\n  }\n  const actualEndpoints = mapEndpoints(\n    Array.isArray(endpoints) ? endpoints : [endpoints],\n  )\n  const WebsocketClass = config?.websocketClass ?? globalThis.WebSocket\n  if (!WebsocketClass) throw new Error(\"Missing WebSocket class\")\n\n  let idx = 0\n  let status: StatusChange\n  let switchTo: [string] | [string, string | string[]] | null = null\n  let disconnect: (withHalt?: boolean) => void = noop\n\n  let outerCleanup: () => void = noop\n  const result = followEnhancer(\n    getSyncProvider(async () => {\n      const [uri, protocols] =\n        switchTo || actualEndpoints[idx++ % endpoints.length]\n      switchTo = null\n      const socket = new WebsocketClass(uri, protocols)\n      const forceSocketClose = () => {\n        try {\n          socket.addEventListener(\"error\", noop, { once: true })\n          socket.close()\n        } catch {}\n      }\n      onStatusChanged(\n        (status = {\n          type: WsEvent.CONNECTING,\n          uri,\n          protocols,\n        }),\n      )\n\n      await new Promise<void>((resolve, reject) => {\n        const onOpen = () => {\n          initialCleanup()\n          resolve()\n        }\n\n        const onError = (e: Event | null) => {\n          initialCleanup()\n          if (e == null) forceSocketClose()\n          console.error(\n            `Unable to connect to ${uri}${\n              protocols ? \", protocols: \" + protocols : \"\"\n            }`,\n          )\n          onStatusChanged(\n            (status = {\n              type: e ? WsEvent.ERROR : WsEvent.CLOSE,\n              event: e,\n            }),\n          )\n          setTimeout(reject, e ? 300 : 0, e)\n        }\n\n        const timeoutToken =\n          timeout !== Infinity\n            ? setTimeout(() => {\n                initialCleanup()\n                forceSocketClose()\n                onStatusChanged((status = timeoutError))\n                reject(timeoutError.event)\n              }, timeout)\n            : undefined\n\n        const initialCleanup = () => {\n          clearTimeout(timeoutToken)\n          socket.removeEventListener(\"error\", onError)\n          socket.removeEventListener(\"open\", onOpen)\n        }\n        socket.addEventListener(\"open\", onOpen)\n        socket.addEventListener(\"error\", onError)\n        disconnect = () => {\n          onError(null)\n        }\n      })\n\n      onStatusChanged(\n        (status = {\n          type: WsEvent.CONNECTED,\n          uri,\n          protocols,\n        }),\n      )\n\n      let _onInnerMessage: (msg: string) => void\n      const inner = innerEnhancer((onInnerMessage) => {\n        _onInnerMessage = onInnerMessage\n        return {\n          send: (m) => {\n            socket.send(m)\n          },\n          disconnect: () => {\n            disconnect()\n          },\n        }\n      })\n\n      return (onMessage, onHalt) => {\n        const connection = inner(onMessage)\n        const _onMessage = (e: MessageEvent) => {\n          if (typeof e.data === \"string\") _onInnerMessage(e.data)\n        }\n        const innerHalt =\n          (reason: WsEvent.CLOSE | WsEvent.ERROR) => (e: any) => {\n            console.warn(`WS halt (${reason})`)\n            onStatusChanged(\n              (status = {\n                type: reason,\n                event: e,\n              }),\n            )\n            onHalt()\n          }\n        const onError = innerHalt(WsEvent.ERROR)\n        const onClose = innerHalt(WsEvent.CLOSE)\n\n        socket.addEventListener(\"message\", _onMessage)\n        socket.addEventListener(\"error\", onError)\n        socket.addEventListener(\"close\", onClose)\n        disconnect = (withHalt) => {\n          outerCleanup()\n          disconnect = noop\n          socket.removeEventListener(\"message\", _onMessage)\n          socket.removeEventListener(\"error\", onError)\n          socket.removeEventListener(\"close\", onClose)\n          forceSocketClose()\n          if (withHalt) onClose({})\n        }\n\n        return connection\n      }\n    }),\n    () => {\n      switchFn()\n    },\n  )\n  outerCleanup = result.cleanup\n  delete (result as any).cleanup\n\n  const switchFn: WsJsonRpcProvider[\"switch\"] = (...args) => {\n    if (status.type === WsEvent.CLOSE) return\n    if (args.length) switchTo = args as any\n    if (status.type !== WsEvent.ERROR) disconnect(true)\n  }\n\n  return Object.assign(result, { switch: switchFn, getStatus: () => status })\n}\n"],"names":[],"mappings":"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"}