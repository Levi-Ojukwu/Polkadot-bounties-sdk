{"version":3,"file":"follow-enhancer.mjs","sources":["../../../src/follow-enhancer.ts"],"sourcesContent":["import { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\n\nconst methods: Record<string, \"follow\" | \"unfollow\"> = {}\n;[\"v1\", \"unstable\"].forEach((version) => {\n  methods[`chainHead_${version}_follow`] = \"follow\"\n  methods[`chainHead_${version}_unfollow`] = \"unfollow\"\n})\n\nexport const followEnhancer: (\n  input: JsonRpcProvider,\n  forceDisconnect: () => void,\n) => JsonRpcProvider & {\n  cleanup: () => void\n} = (base, forceDisconnect) => {\n  const prematureStops = new Set<string>()\n  const preOpId = new Map<string, string>()\n  const onGoing = new Set<string>()\n  let methodsRequestId: string | undefined\n\n  const result: JsonRpcProvider = (onMsg) => {\n    const { send, disconnect } = base((fromProvider) => {\n      const parsed = JSON.parse(fromProvider)\n      // it's a response\n      if (\"id\" in parsed) {\n        const { id, result } = parsed\n        if (id === methodsRequestId) {\n          methodsRequestId = undefined\n          if (\n            result &&\n            !(result.methods as string[]).some((x) => {\n              const [group, , name] = x.split(\"_\")\n              return group === \"chainHead\" && name === \"follow\"\n            })\n          ) {\n            onMsg(fromProvider)\n            forceDisconnect()\n            return\n          }\n        }\n\n        const msg = preOpId.get(id)\n        if (msg) {\n          preOpId.delete(id)\n          if (prematureStops.has(result)) {\n            prematureStops.delete(result)\n            return\n          }\n\n          onGoing.add(result)\n          const currentSize = onGoing.size + preOpId.size\n          if (currentSize > 2)\n            console.warn(\n              `Too many chainHead follow subscriptions (${currentSize})`,\n            )\n          else if (parsed.error) {\n            console.warn(`chainHead follow failed on the ${currentSize} sub`)\n            forceDisconnect()\n            preOpId.set(id, msg)\n            send(msg)\n            return\n          }\n        }\n      } else {\n        // it's a notifiaction\n        const { subscription, result } = (parsed as any).params\n        if (result?.event === \"stop\") {\n          if (onGoing.has(subscription)) onGoing.delete(subscription)\n          else prematureStops.add(subscription)\n        }\n      }\n      onMsg(fromProvider)\n    })\n\n    return {\n      send(toProvider) {\n        const parsed = JSON.parse(toProvider)\n        if (parsed.method === \"rpc_methods\") methodsRequestId = parsed.id\n\n        const method = methods[parsed.method]\n        if (method === \"follow\") {\n          preOpId.set(parsed.id, toProvider)\n        } else if (method === \"unfollow\") {\n          onGoing.delete(parsed.params[0])\n        }\n        send(toProvider)\n      },\n      disconnect,\n    }\n  }\n\n  return Object.assign(result, {\n    cleanup: () => {\n      prematureStops.clear()\n      preOpId.clear()\n      onGoing.clear()\n    },\n  })\n}\n"],"names":["result"],"mappings":"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"}