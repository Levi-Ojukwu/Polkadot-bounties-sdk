import { createClient as createClient$1 } from '@polkadot-api/raw-client';
import { getTransaction } from './transaction/transaction.mjs';
import { getChainHead } from './chainhead/chainhead.mjs';
import { abortablePromiseFn } from './internal-utils/abortablePromiseFn.mjs';
import { createGetChainSpec } from './chainspec.mjs';
import { getArchive } from './archive/archive.mjs';

const createClient = (provider) => {
  const { request, disconnect } = createClient$1(provider);
  return {
    archive: getArchive(request),
    chainHead: getChainHead(request),
    transaction: getTransaction(request),
    getChainSpecData: createGetChainSpec(request),
    destroy: disconnect,
    request: abortablePromiseFn(
      (onSuccess, onError, method, params) => request(method, params, { onSuccess, onError })
    ),
    _request: request
  };
};

export { createClient };
//# sourceMappingURL=substrate-client.mjs.map
