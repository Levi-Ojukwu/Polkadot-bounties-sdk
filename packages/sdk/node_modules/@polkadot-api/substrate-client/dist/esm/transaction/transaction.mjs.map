{"version":3,"file":"transaction.mjs","sources":["../../../src/transaction/transaction.ts"],"sourcesContent":["import { noop } from \"@/internal-utils\"\nimport { type ClientRequest } from \"@polkadot-api/raw-client\"\nimport { transaction } from \"@/methods\"\n\nexport const getTransaction =\n  (request: ClientRequest<string, any>) =>\n  (tx: string, error: (e: Error) => void) => {\n    let isDone = false\n    let cancel = () => {\n      isDone = true\n    }\n\n    request(transaction.broadcast, [tx], {\n      onSuccess: (subscriptionId) => {\n        if (subscriptionId !== null) {\n          cancel = () => {\n            request(transaction.stop, [subscriptionId])\n            cancel = noop\n          }\n          if (isDone) cancel()\n        } else if (!isDone) {\n          error(new Error(\"Max # of broadcasted transactions has been reached\"))\n        }\n      },\n      onError: error,\n    })\n\n    return () => {\n      cancel()\n    }\n  }\n"],"names":[],"mappings":";;;;AAIO,MAAM,cAAA,GACX,CAAC,OAAA,KACD,CAAC,IAAY,KAAA,KAA8B;AACzC,EAAA,IAAI,MAAA,GAAS,KAAA;AACb,EAAA,IAAI,SAAS,MAAM;AACjB,IAAA,MAAA,GAAS,IAAA;AAAA,EACX,CAAA;AAEA,EAAA,OAAA,CAAQ,WAAA,CAAY,SAAA,EAAW,CAAC,EAAE,CAAA,EAAG;AAAA,IACnC,SAAA,EAAW,CAAC,cAAA,KAAmB;AAC7B,MAAA,IAAI,mBAAmB,IAAA,EAAM;AAC3B,QAAA,MAAA,GAAS,MAAM;AACb,UAAA,OAAA,CAAQ,WAAA,CAAY,IAAA,EAAM,CAAC,cAAc,CAAC,CAAA;AAC1C,UAAA,MAAA,GAAS,IAAA;AAAA,QACX,CAAA;AACA,QAAA,IAAI,QAAQ,MAAA,EAAO;AAAA,MACrB,CAAA,MAAA,IAAW,CAAC,MAAA,EAAQ;AAClB,QAAA,KAAA,CAAM,IAAI,KAAA,CAAM,oDAAoD,CAAC,CAAA;AAAA,MACvE;AAAA,IACF,CAAA;AAAA,IACA,OAAA,EAAS;AAAA,GACV,CAAA;AAED,EAAA,OAAO,MAAM;AACX,IAAA,MAAA,EAAO;AAAA,EACT,CAAA;AACF;;;;"}