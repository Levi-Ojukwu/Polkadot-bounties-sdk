import '@polkadot-api/utils';
import { noop } from '../internal-utils/noop.mjs';
import { transaction } from '../methods.mjs';

const getTransaction = (request) => (tx, error) => {
  let isDone = false;
  let cancel = () => {
    isDone = true;
  };
  request(transaction.broadcast, [tx], {
    onSuccess: (subscriptionId) => {
      if (subscriptionId !== null) {
        cancel = () => {
          request(transaction.stop, [subscriptionId]);
          cancel = noop;
        };
        if (isDone) cancel();
      } else if (!isDone) {
        error(new Error("Max # of broadcasted transactions has been reached"));
      }
    },
    onError: error
  });
  return () => {
    cancel();
  };
};

export { getTransaction };
//# sourceMappingURL=transaction.mjs.map
