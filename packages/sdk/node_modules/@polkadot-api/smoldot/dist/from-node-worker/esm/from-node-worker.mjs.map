{"version":3,"file":"from-node-worker.mjs","sources":["../../../src/from-node-worker.ts"],"sourcesContent":["import { Worker } from \"node:worker_threads\"\nimport type { Chain, Client } from \"smoldot\"\nimport type { RequestMessage, SmoldotOptions } from \"./node-worker\"\n\nconst chainIds = new WeakMap<Chain, number>()\nexport const startFromWorker = (\n  worker: Worker,\n  options: SmoldotOptions = {},\n): Client => {\n  worker.setMaxListeners(0)\n  sendToWorker(worker, {\n    type: \"start\",\n    value: options,\n  })\n\n  return {\n    async addChain(options) {\n      const { potentialRelayChains, ...addChainOptions } = options\n      const id = await sendToWorker(worker, {\n        type: \"add-chain\",\n        value: {\n          ...addChainOptions,\n          potentialRelayChainIds: potentialRelayChains?.map((chain) => {\n            const id = chainIds.get(chain)\n            if (id == null) {\n              throw new Error(\"Only chains created with `addChain` can be used\")\n            }\n            return id\n          }),\n        },\n      })\n\n      const chain: Chain = {\n        jsonRpcResponses: {\n          next: async () =>\n            sendToWorker(worker, {\n              type: \"chain\",\n              value: {\n                id,\n                type: \"receiveIterable\",\n              },\n            }),\n          [Symbol.asyncIterator]() {\n            return this\n          },\n        },\n        nextJsonRpcResponse() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"receive\",\n            },\n          })\n        },\n        remove() {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"remove\",\n            },\n          })\n        },\n        sendJsonRpc(value) {\n          return sendToWorker(worker, {\n            type: \"chain\",\n            value: {\n              id,\n              type: \"send\",\n              value,\n            },\n          })\n        },\n      }\n      chainIds.set(chain, id)\n\n      return chain\n    },\n    async terminate() {\n      await sendToWorker(worker, {\n        type: \"terminate\",\n      })\n    },\n  }\n}\n\nlet msgId = 0\nfunction sendToWorker(worker: Worker, msg: RequestMessage): Promise<any> {\n  const id = msgId++\n  worker.postMessage({ ...msg, id })\n  return new Promise((resolve) => {\n    const msgHandler = (response: any) => {\n      if (response.id === id) {\n        resolve(response.value)\n        worker.off(\"message\", msgHandler)\n      }\n    }\n    worker.on(\"message\", msgHandler)\n  })\n}\n"],"names":["options","chain","id"],"mappings":"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"}