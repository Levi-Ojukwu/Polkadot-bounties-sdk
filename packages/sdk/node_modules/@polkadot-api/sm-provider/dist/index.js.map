{"version":3,"file":"index.js","sources":["../src/sm-provider.ts"],"sourcesContent":["import {\n  AddChainError,\n  AlreadyDestroyedError,\n  CrashError,\n  JsonRpcDisabledError,\n  type Chain,\n} from \"@polkadot-api/smoldot\"\nimport type { JsonRpcProvider } from \"@polkadot-api/json-rpc-provider\"\nimport { getSyncProvider } from \"@polkadot-api/json-rpc-provider-proxy\"\n\nlet pending: Promise<Chain> | null\n\nconst isRecoverable = (error: any) =>\n  !(\n    error instanceof AddChainError ||\n    error instanceof AlreadyDestroyedError ||\n    error instanceof CrashError ||\n    error instanceof JsonRpcDisabledError\n  )\n\nexport const getSmProvider = (chain: Chain | Promise<Chain>): JsonRpcProvider =>\n  getSyncProvider(async () => {\n    while (pending) await pending\n\n    let resolvedChain: Chain\n    if (chain instanceof Promise) {\n      pending = chain\n      resolvedChain = await chain\n      pending = null\n    } else resolvedChain = chain\n\n    return (listener, onError) => {\n      let listening = true\n      ;(async () => {\n        do {\n          let message = \"\"\n          try {\n            message = await resolvedChain.nextJsonRpcResponse()\n          } catch (e) {\n            if (listening && isRecoverable(e)) onError()\n            return\n          }\n          if (!listening) break\n          listener(message)\n        } while (listening)\n      })()\n\n      return {\n        send(msg: string) {\n          resolvedChain.sendJsonRpc(msg)\n        },\n        disconnect() {\n          listening = false\n          resolvedChain.remove()\n        },\n      }\n    }\n  })\n"],"names":["AddChainError","AlreadyDestroyedError","CrashError","JsonRpcDisabledError","getSyncProvider"],"mappings":";;;;;AAUA,IAAI,OAAA;AAEJ,MAAM,aAAA,GAAgB,CAAC,KAAA,KACrB,EACE,KAAA,YAAiBA,yBACjB,KAAA,YAAiBC,6BAAA,IACjB,KAAA,YAAiBC,kBAAA,IACjB,KAAA,YAAiBC,4BAAA,CAAA;AAGd,MAAM,aAAA,GAAgB,CAAC,KAAA,KAC5BC,oCAAA,CAAgB,YAAY;AAC1B,EAAA,OAAO,SAAS,MAAM,OAAA;AAEtB,EAAA,IAAI,aAAA;AACJ,EAAA,IAAI,iBAAiB,OAAA,EAAS;AAC5B,IAAA,OAAA,GAAU,KAAA;AACV,IAAA,aAAA,GAAgB,MAAM,KAAA;AACtB,IAAA,OAAA,GAAU,IAAA;AAAA,EACZ,OAAO,aAAA,GAAgB,KAAA;AAEvB,EAAA,OAAO,CAAC,UAAU,OAAA,KAAY;AAC5B,IAAA,IAAI,SAAA,GAAY,IAAA;AACf,IAAA,CAAC,YAAY;AACZ,MAAA,GAAG;AACD,QAAA,IAAI,OAAA,GAAU,EAAA;AACd,QAAA,IAAI;AACF,UAAA,OAAA,GAAU,MAAM,cAAc,mBAAA,EAAoB;AAAA,QACpD,SAAS,CAAA,EAAG;AACV,UAAA,IAAI,SAAA,IAAa,aAAA,CAAc,CAAC,CAAA,EAAG,OAAA,EAAQ;AAC3C,UAAA;AAAA,QACF;AACA,QAAA,IAAI,CAAC,SAAA,EAAW;AAChB,QAAA,QAAA,CAAS,OAAO,CAAA;AAAA,MAClB,CAAA,QAAS,SAAA;AAAA,IACX,CAAA,GAAG;AAEH,IAAA,OAAO;AAAA,MACL,KAAK,GAAA,EAAa;AAChB,QAAA,aAAA,CAAc,YAAY,GAAG,CAAA;AAAA,MAC/B,CAAA;AAAA,MACA,UAAA,GAAa;AACX,QAAA,SAAA,GAAY,KAAA;AACZ,QAAA,aAAA,CAAc,MAAA,EAAO;AAAA,MACvB;AAAA,KACF;AAAA,EACF,CAAA;AACF,CAAC;;;;"}